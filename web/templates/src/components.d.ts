/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Address } from "./models/address.model";
export namespace Components {
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface TplInvoiceContent {
    }
    interface TplInvoiceFooter {
    }
    interface TplInvoiceHeader {
    }
    interface TplTemplateDemoContent {
    }
    interface TplTemplateDemoFooter {
    }
    interface TplTemplateDemoHeader {
    }
    interface TplWhitePaperContent {
    }
    interface TplWhitePaperFooter {
    }
    interface TplWhitePaperHeader {
    }
    interface TplWorkReportContent {
    }
    interface TplWorkReportFooter {
    }
    interface TplWorkReportHeader {
    }
    interface TplbAddress {
        "address": Address;
    }
    interface TplbAddressLine {
        "address": Address;
    }
}
declare global {
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLTplInvoiceContentElement extends Components.TplInvoiceContent, HTMLStencilElement {
    }
    var HTMLTplInvoiceContentElement: {
        prototype: HTMLTplInvoiceContentElement;
        new (): HTMLTplInvoiceContentElement;
    };
    interface HTMLTplInvoiceFooterElement extends Components.TplInvoiceFooter, HTMLStencilElement {
    }
    var HTMLTplInvoiceFooterElement: {
        prototype: HTMLTplInvoiceFooterElement;
        new (): HTMLTplInvoiceFooterElement;
    };
    interface HTMLTplInvoiceHeaderElement extends Components.TplInvoiceHeader, HTMLStencilElement {
    }
    var HTMLTplInvoiceHeaderElement: {
        prototype: HTMLTplInvoiceHeaderElement;
        new (): HTMLTplInvoiceHeaderElement;
    };
    interface HTMLTplTemplateDemoContentElement extends Components.TplTemplateDemoContent, HTMLStencilElement {
    }
    var HTMLTplTemplateDemoContentElement: {
        prototype: HTMLTplTemplateDemoContentElement;
        new (): HTMLTplTemplateDemoContentElement;
    };
    interface HTMLTplTemplateDemoFooterElement extends Components.TplTemplateDemoFooter, HTMLStencilElement {
    }
    var HTMLTplTemplateDemoFooterElement: {
        prototype: HTMLTplTemplateDemoFooterElement;
        new (): HTMLTplTemplateDemoFooterElement;
    };
    interface HTMLTplTemplateDemoHeaderElement extends Components.TplTemplateDemoHeader, HTMLStencilElement {
    }
    var HTMLTplTemplateDemoHeaderElement: {
        prototype: HTMLTplTemplateDemoHeaderElement;
        new (): HTMLTplTemplateDemoHeaderElement;
    };
    interface HTMLTplWhitePaperContentElement extends Components.TplWhitePaperContent, HTMLStencilElement {
    }
    var HTMLTplWhitePaperContentElement: {
        prototype: HTMLTplWhitePaperContentElement;
        new (): HTMLTplWhitePaperContentElement;
    };
    interface HTMLTplWhitePaperFooterElement extends Components.TplWhitePaperFooter, HTMLStencilElement {
    }
    var HTMLTplWhitePaperFooterElement: {
        prototype: HTMLTplWhitePaperFooterElement;
        new (): HTMLTplWhitePaperFooterElement;
    };
    interface HTMLTplWhitePaperHeaderElement extends Components.TplWhitePaperHeader, HTMLStencilElement {
    }
    var HTMLTplWhitePaperHeaderElement: {
        prototype: HTMLTplWhitePaperHeaderElement;
        new (): HTMLTplWhitePaperHeaderElement;
    };
    interface HTMLTplWorkReportContentElement extends Components.TplWorkReportContent, HTMLStencilElement {
    }
    var HTMLTplWorkReportContentElement: {
        prototype: HTMLTplWorkReportContentElement;
        new (): HTMLTplWorkReportContentElement;
    };
    interface HTMLTplWorkReportFooterElement extends Components.TplWorkReportFooter, HTMLStencilElement {
    }
    var HTMLTplWorkReportFooterElement: {
        prototype: HTMLTplWorkReportFooterElement;
        new (): HTMLTplWorkReportFooterElement;
    };
    interface HTMLTplWorkReportHeaderElement extends Components.TplWorkReportHeader, HTMLStencilElement {
    }
    var HTMLTplWorkReportHeaderElement: {
        prototype: HTMLTplWorkReportHeaderElement;
        new (): HTMLTplWorkReportHeaderElement;
    };
    interface HTMLTplbAddressElement extends Components.TplbAddress, HTMLStencilElement {
    }
    var HTMLTplbAddressElement: {
        prototype: HTMLTplbAddressElement;
        new (): HTMLTplbAddressElement;
    };
    interface HTMLTplbAddressLineElement extends Components.TplbAddressLine, HTMLStencilElement {
    }
    var HTMLTplbAddressLineElement: {
        prototype: HTMLTplbAddressLineElement;
        new (): HTMLTplbAddressLineElement;
    };
    interface HTMLElementTagNameMap {
        "my-component": HTMLMyComponentElement;
        "tpl-invoice-content": HTMLTplInvoiceContentElement;
        "tpl-invoice-footer": HTMLTplInvoiceFooterElement;
        "tpl-invoice-header": HTMLTplInvoiceHeaderElement;
        "tpl-template-demo-content": HTMLTplTemplateDemoContentElement;
        "tpl-template-demo-footer": HTMLTplTemplateDemoFooterElement;
        "tpl-template-demo-header": HTMLTplTemplateDemoHeaderElement;
        "tpl-white-paper-content": HTMLTplWhitePaperContentElement;
        "tpl-white-paper-footer": HTMLTplWhitePaperFooterElement;
        "tpl-white-paper-header": HTMLTplWhitePaperHeaderElement;
        "tpl-work-report-content": HTMLTplWorkReportContentElement;
        "tpl-work-report-footer": HTMLTplWorkReportFooterElement;
        "tpl-work-report-header": HTMLTplWorkReportHeaderElement;
        "tplb-address": HTMLTplbAddressElement;
        "tplb-address-line": HTMLTplbAddressLineElement;
    }
}
declare namespace LocalJSX {
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface TplInvoiceContent {
    }
    interface TplInvoiceFooter {
    }
    interface TplInvoiceHeader {
    }
    interface TplTemplateDemoContent {
    }
    interface TplTemplateDemoFooter {
    }
    interface TplTemplateDemoHeader {
    }
    interface TplWhitePaperContent {
    }
    interface TplWhitePaperFooter {
    }
    interface TplWhitePaperHeader {
    }
    interface TplWorkReportContent {
    }
    interface TplWorkReportFooter {
    }
    interface TplWorkReportHeader {
    }
    interface TplbAddress {
        "address"?: Address;
    }
    interface TplbAddressLine {
        "address"?: Address;
    }
    interface IntrinsicElements {
        "my-component": MyComponent;
        "tpl-invoice-content": TplInvoiceContent;
        "tpl-invoice-footer": TplInvoiceFooter;
        "tpl-invoice-header": TplInvoiceHeader;
        "tpl-template-demo-content": TplTemplateDemoContent;
        "tpl-template-demo-footer": TplTemplateDemoFooter;
        "tpl-template-demo-header": TplTemplateDemoHeader;
        "tpl-white-paper-content": TplWhitePaperContent;
        "tpl-white-paper-footer": TplWhitePaperFooter;
        "tpl-white-paper-header": TplWhitePaperHeader;
        "tpl-work-report-content": TplWorkReportContent;
        "tpl-work-report-footer": TplWorkReportFooter;
        "tpl-work-report-header": TplWorkReportHeader;
        "tplb-address": TplbAddress;
        "tplb-address-line": TplbAddressLine;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "tpl-invoice-content": LocalJSX.TplInvoiceContent & JSXBase.HTMLAttributes<HTMLTplInvoiceContentElement>;
            "tpl-invoice-footer": LocalJSX.TplInvoiceFooter & JSXBase.HTMLAttributes<HTMLTplInvoiceFooterElement>;
            "tpl-invoice-header": LocalJSX.TplInvoiceHeader & JSXBase.HTMLAttributes<HTMLTplInvoiceHeaderElement>;
            "tpl-template-demo-content": LocalJSX.TplTemplateDemoContent & JSXBase.HTMLAttributes<HTMLTplTemplateDemoContentElement>;
            "tpl-template-demo-footer": LocalJSX.TplTemplateDemoFooter & JSXBase.HTMLAttributes<HTMLTplTemplateDemoFooterElement>;
            "tpl-template-demo-header": LocalJSX.TplTemplateDemoHeader & JSXBase.HTMLAttributes<HTMLTplTemplateDemoHeaderElement>;
            "tpl-white-paper-content": LocalJSX.TplWhitePaperContent & JSXBase.HTMLAttributes<HTMLTplWhitePaperContentElement>;
            "tpl-white-paper-footer": LocalJSX.TplWhitePaperFooter & JSXBase.HTMLAttributes<HTMLTplWhitePaperFooterElement>;
            "tpl-white-paper-header": LocalJSX.TplWhitePaperHeader & JSXBase.HTMLAttributes<HTMLTplWhitePaperHeaderElement>;
            "tpl-work-report-content": LocalJSX.TplWorkReportContent & JSXBase.HTMLAttributes<HTMLTplWorkReportContentElement>;
            "tpl-work-report-footer": LocalJSX.TplWorkReportFooter & JSXBase.HTMLAttributes<HTMLTplWorkReportFooterElement>;
            "tpl-work-report-header": LocalJSX.TplWorkReportHeader & JSXBase.HTMLAttributes<HTMLTplWorkReportHeaderElement>;
            "tplb-address": LocalJSX.TplbAddress & JSXBase.HTMLAttributes<HTMLTplbAddressElement>;
            "tplb-address-line": LocalJSX.TplbAddressLine & JSXBase.HTMLAttributes<HTMLTplbAddressLineElement>;
        }
    }
}
